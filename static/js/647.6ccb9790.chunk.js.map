{"version":3,"file":"static/js/647.6ccb9790.chunk.js","mappings":"qOAGaA,EAAmBC,EAAAA,EAAAA,IAAH,yHAQhBC,GAAYD,EAAAA,EAAAA,GAAOE,EAAAA,GAAPF,CAAH,sdAuBTG,EAAWH,EAAAA,EAAAA,IAAH,iF,6BC5BRI,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACR,EAAD,UACGM,EAAOG,KAAI,YAAmC,IAAhCC,EAA+B,EAA/BA,GAAIC,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,cACxB,OACE,UAACV,EAAD,CAAoBW,GAAE,kBAAaH,GAAMI,MAAO,CAAEC,KAAMR,GAAxD,UACGK,IACC,SAACR,EAAD,CAAUY,IAAG,UAAKC,EAAAA,GAAL,OAAkBL,GAAiBM,IAAKP,KAErDC,IAAiB,SAACR,EAAD,CAAUY,IAAKG,EAAUD,IAAKP,IAChDA,IALaD,EAQnB,KAGN,C,uDCxBM,IAAMO,EAAa,qC","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","utils/posterUrl.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieListWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  padding-top: 20px;\n  padding-left: 40px;\n`;\n\nexport const MovieItem = styled(Link)`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  font-size: 20px;\n  color: inherit;\n  text-decoration: none;\n  cursor: pointer;\n  width: 400px;\n  padding: 10px;\n  padding-left: 15px;\n  background-color: rgb(240, 240, 240);\n  border-radius: 3px;\n  box-shadow: 1px 2px rgb(190, 190, 190);\n\n  &:hover,\n  &:focus {\n    color: tomato;\n    background-color: rgb(230, 230, 230);\n    box-shadow: 2px 3px rgb(170, 170, 170);\n  }\n`;\n\nexport const MovieImg = styled.img`\n  display: block;\n  max-width: 120px;\n  height: auto;\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { MovieListWrapper, MovieItem, MovieImg } from './MovieList.styled';\nimport { POSTER_URL } from 'utils/posterUrl';\nimport noPoster from '../../utils/noPoster.jpg';\n\nexport const MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MovieListWrapper>\n      {movies.map(({ id, title, backdrop_path }) => {\n        return (\n          <MovieItem key={id} to={`/movies/${id}`} state={{ from: location }}>\n            {backdrop_path && (\n              <MovieImg src={`${POSTER_URL}${backdrop_path}`} alt={title} />\n            )}\n            {!backdrop_path && <MovieImg src={noPoster} alt={title} />}\n            {title}\n          </MovieItem>\n        );\n      })}\n    </MovieListWrapper>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n","export const POSTER_URL = 'https://image.tmdb.org/t/p/original';\n"],"names":["MovieListWrapper","styled","MovieItem","Link","MovieImg","MovieList","movies","location","useLocation","map","id","title","backdrop_path","to","state","from","src","POSTER_URL","alt","noPoster"],"sourceRoot":""}